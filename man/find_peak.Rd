% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_peak.R
\name{find_peak}
\alias{find_peak}
\title{Estimate the peak of an incidence curve}
\usage{
find_peak(x, n = 100, alpha = 0.05)
}
\arguments{
\item{x}{An \code{incidence} object.}

\item{n}{The number of bootstrap datasets to be generated; defaults to 100.}
}
\value{
A list containing the following items:
\itemize{
\item \code{observed}: the peak incidence of the original dataset
\item \code{estimated}: the mean peak time of the bootstrap datasets
\item \code{ci}: the confidence interval based on bootstrap datasets
\item \code{peaks}: the peak times of the bootstrap datasets
}
}
\description{
This function can be used to estimate the peak of an epidemic curve stored as
\code{incidence}, using bootstrap. See \link[incidence:bootstrap]{incidence::bootstrap} for more information
on the resampling.
}
\details{
Input dates are resampled with replacement to form bootstrapped
datasets; the peak is reported for each, resulting in a distribution of
peak times. When there are ties for peak incidence, only the first date is
reported.
}
\examples{

if (require(outbreaks) && require(ggplot2)) {
  i <- incidence(fluH7N9_china_2013$date_of_onset)
  i
  plot(i)

  ## one simple bootstrap
  x <- bootstrap(i)
  x
  plot(x)

  ## find 95\% CI for peak time using bootstrap
  peak_data <- find_peak(i)
  peak_data
  summary(peak_data$peaks)

  ## show confidence interval
  plot(i) + geom_vline(xintercept = peak_data$ci, col = "red", lty = 2)

  ## show the distribution of bootstrapped peaks
  df <- data.frame(peak = peak_data$peaks)
  plot(i) + geom_density(data = df,
                         aes(x = peak, y = 10 * ..scaled..),
                         alpha = .2, fill = "red", color = "red")

}

}
\seealso{
\link[incidence:bootstrap]{incidence::bootstrap} for the bootstrapping underlying this
approach
}
\author{
Thibaut Jombart \email{thibautjombart@gmail.com}
}
